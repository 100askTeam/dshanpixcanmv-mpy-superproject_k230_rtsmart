name: CanMV K230 Build

on:
  push:
    tags: [ "v*" ]
    branches: [ "dev", "test/*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  pack_kmodel:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash

    steps:
      - name: Setup SSH
        run: |
          # configure git
          git config --global user.name kendryte747
          git config --global user.email kendryte747@gmail.com
          # update ssh key
          mkdir -p ~/.ssh
          echo "${{ secrets.ACTIONS_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Download_Kmodel
        run: |
          git clone git@github.com:canmv-k230/model_zoo.git --depth 1

      - uses: actions/upload-artifact@v4
        with:
          name: "canmv-k230-github-actions-kmodel-${{ github.sha }}"
          compression-level: 9
          path: |
            model_zoo/*.kmodel

  build:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        config: [k230_canmv_01studio_defconfig, k230d_canmv_bpi_zero_defconfig]

    steps:
      - name: Setup SSH
        run: |
          # configure git
          git config --global user.name kendryte747
          git config --global user.email kendryte747@gmail.com
          # update ssh key
          mkdir -p ~/.ssh
          echo "${{ secrets.ACTIONS_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # install repo
          mkdir -p ~/bin/
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod +x ~/bin/repo

      - name: Prepare code
        run: |
          ~/bin/repo init -u git@github.com:canmv-k230/manifest.git
          ~/bin/repo sync

      - name: Prepare Environment
        run: |
          sudo apt update
          sudo apt install -y bison flex gcc libncurses5-dev pkg-config \
            libconfuse-dev libssl-dev python3 python3-pip python-is-python3 \
            cmake libyaml-dev scons mtools
          pip3 install pycryptodome gmssl

      - name: Build Projects
        run: |
          export IS_CI=1
          make ${{ matrix.config }}
          make dl_toolchain
          time make log

      - uses: actions/upload-artifact@v4
        with:
          name: "canmv-k230-github-actions-${{ matrix.config }}-${{ github.sha }}"
          compression-level: 9
          path: |
            log.txt
            output/**/*.img

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          path: ./release
          name: "canmv-${{ github.sha }}"

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "release/**.bin"
          token: ${{ secrets.GITHUB_TOKEN  }}
